apply plugin: 'java'
apply plugin: 'maven-publish'

compileJava {
    targetCompatibility = JavaVersion.VERSION_1_8
    sourceCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    Map<String, String> dependencies = rootProject.ext.dependencies;

    compile dependencies.gson
    compile dependencies.okHttpLoggingInterceptor
    compile dependencies.retrofitConverterGson
    compile dependencies.retrofit

    testImplementation dependencies.junit
    testImplementation dependencies.hamcrestAll
}

jar {
    manifest {
        attributes(
                'Main-Class': 'net.myacxy.retrotwitch.v5.RetroTwitch',
                'Implementation-Title': project.name,
                'Implementation-Vendor': project.group,
                'Implementation-Version': project.version,
                'Class-Path': configurations.runtime.collect { it.getName() }.join(' ')
        )
    }
}

task sourcesJar(type: Jar, dependsOn: classes, group: 'build', description: 'Assembles a jar archive containing the sources.') {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task fatJar(type: Jar, dependsOn: classes, group: 'build', description: 'Assembles a jar archive containing the main classes with dependencies.') {
    manifest.from jar.manifest
    classifier = 'all'
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar, sourcesJar
}

artifacts {
    archives jar
    archives fatJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'net.myacxy.retrotwitch'
            artifactId 'core'
            version '0.1'

            artifact jar
            artifact fatJar { classifier "all" }
            artifact sourcesJar { classifier "sources" }
        }
    }
}

publishing {
    repositories {
        maven {
            url "$rootProject.buildDir"
        }
    }
}
